import { useCallback, useEffect, useLayoutEffect, useRef } from "react";
const isWeb = process.env.TAMAGUI_TARGET === "web";
const isClient = typeof window !== "undefined";
const useIsomorphicLayoutEffect = !isWeb || isClient ? useLayoutEffect : useEffect;
function useGet(currentValue, initialValue, forwardToFunction) {
  const curRef = useRef(initialValue ?? currentValue);
  useIsomorphicLayoutEffect(() => {
    curRef.current = currentValue;
  });
  return useCallback(
    forwardToFunction ? (...args) => {
      var _a;
      return (_a = curRef.current) == null ? void 0 : _a.apply(null, args);
    } : () => curRef.current,
    []
  );
}
export {
  useGet
};
//# sourceMappingURL=useGet.js.map
