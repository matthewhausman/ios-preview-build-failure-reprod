{"version":3,"file":"core.js","sourceRoot":"","sources":["../../src/link/core.tsx"],"names":[],"mappings":";AAEA,OAAO,EAAE,QAAQ,EAAE,MAAM,cAAc,CAAA;AAEvC,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAA;AACnC,OAAO,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAA;AACtC,OAAO,EAAE,OAAO,EAAE,MAAM,mBAAmB,CAAA;AAsB3C,SAAS,QAAQ,CAAC,EAChB,QAAQ,EACR,IAAI,EACJ,EAAE,EACF,cAAc,EACd,SAAS,EACT,OAAO,EACP,YAAY,EACZ,GAAG,KAAK,EAIT;IACC,IAAI,QAAQ,CAAC,EAAE,KAAK,KAAK,EAAE;QACzB,OAAO,CACL,KAAC,QAAQ,OACH,KAAK,EACT,OAAO,EAAE,OAAO,EAChB,IAAI,EAAE,IAAI,EACV,EAAE,EAAE,EAAE,EACN,QAAQ,QACR,cAAc,kBAEd,KAAC,SAAS,OAAK,cAAc,YAAG,QAAQ,WAAa,WAC5C,CACZ,CAAA;KACF;IACD,sDAAsD;IACtD,MAAM,MAAM,GAAG,OAAO,CAAC;QACrB,IAAI;QACJ,EAAE;QACF,OAAO;QACP,YAAY;KACb,CAAC,CAAA;IACF,OAAO,CACL,KAAC,SAAS,IACR,iBAAiB,EAAC,MAAM,KACpB,cAAc,EAClB,OAAO,EAAE,CAAC,CAAO,EAAE,EAAE;YACnB,cAAc,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC,CAAA;YAC5B,MAAM,IAAI,GAAG,EAAE,IAAI,IAAI,CAAA;YACvB,IAAI,CAAC,EAAE,gBAAgB;gBAAE,OAAM;YAC/B,wBAAwB;YACxB,IAAI,OAAO,IAAI,KAAK,QAAQ,IAAI,aAAa,CAAC,IAAI,CAAC,EAAE;gBACnD,OAAO,CAAC,IAAI,CAAC,CAAA;aACd;iBAAM;gBACL,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;aAClB;QACH,CAAC,YAEA,QAAQ,WACC,CACb,CAAA;AACH,CAAC;AAED,0DAA0D;AAC1D,gEAAgE;AAChE,MAAM,kBAAkB,GAAG,4BAA4B,CAAA;AACvD,kIAAkI;AAClI,MAAM,aAAa,GAAG,CAAC,GAAW,EAAE,EAAE,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;AAEnE,OAAO,EAAE,QAAQ,EAAE,CAAA","sourcesContent":["import React from 'react'\nimport type { ComponentProps, ComponentType } from 'react'\nimport { Platform } from 'react-native'\n\nimport { openURL } from './linking'\nimport { NextLink } from './next-link'\nimport { useLink } from './use-custom-link'\n\nexport type LinkCoreProps = {\n  children: React.ReactNode\n} & Omit<\n  ComponentProps<typeof NextLink>,\n  'passHref' | 'replace' | 'legacyBehavior'\n> &\n  (\n    | {\n        replace?: false\n        experimental?: undefined\n      }\n    | {\n        replace: true\n        experimental?: {\n          nativeBehavior: 'stack-replace'\n          isNestedNavigator: boolean\n        }\n      }\n  )\n\nfunction LinkCore({\n  children,\n  href,\n  as,\n  componentProps,\n  Component,\n  replace,\n  experimental,\n  ...props\n}: LinkCoreProps & {\n  Component: ComponentType<any>\n  componentProps?: any\n}) {\n  if (Platform.OS === 'web') {\n    return (\n      <NextLink\n        {...props}\n        replace={replace}\n        href={href}\n        as={as}\n        passHref\n        legacyBehavior\n      >\n        <Component {...componentProps}>{children}</Component>\n      </NextLink>\n    )\n  }\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const linkTo = useLink({\n    href,\n    as,\n    replace,\n    experimental,\n  })\n  return (\n    <Component\n      accessibilityRole=\"link\"\n      {...componentProps}\n      onPress={(e?: any) => {\n        componentProps?.onPress?.(e)\n        const link = as || href\n        if (e?.defaultPrevented) return\n        // Handles external URLs\n        if (typeof link === 'string' && isAbsoluteUrl(link)) {\n          openURL(link)\n        } else {\n          linkTo.onPress(e)\n        }\n      }}\n    >\n      {children}\n    </Component>\n  )\n}\n\n// Scheme: https://tools.ietf.org/html/rfc3986#section-3.1\n// Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\nconst ABSOLUTE_URL_REGEX = /^[a-zA-Z][a-zA-Z\\d+\\-.]*?:/\n// Source - https://github.com/vercel/next.js/blob/77b5f79a4dff453abb62346bf75b14d859539b81/packages/next/shared/lib/utils.ts#L313\nconst isAbsoluteUrl = (url: string) => ABSOLUTE_URL_REGEX.test(url)\n\nexport { LinkCore }\n"]}