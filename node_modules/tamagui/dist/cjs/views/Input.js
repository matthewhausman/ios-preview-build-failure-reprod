"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var Input_exports = {};
__export(Input_exports, {
  Input: () => Input,
  InputFrame: () => InputFrame,
  defaultStyles: () => defaultStyles
});
module.exports = __toCommonJS(Input_exports);
var import_core = require("@tamagui/core");
var import_focusable = require("@tamagui/focusable");
var import_react_native = require("react-native");
var import_inputHelpers = require("../helpers/inputHelpers");
(0, import_core.setupReactNative)({
  TextInput: import_react_native.TextInput
});
const defaultStyles = {
  size: "$true",
  fontFamily: "$body",
  borderWidth: 1,
  outlineWidth: 0,
  color: "$color",
  focusable: true,
  borderColor: "$borderColor",
  backgroundColor: "$background",
  placeholderTextColor: "$placeholderColor",
  // this fixes a flex bug where it overflows container
  minWidth: 0,
  hoverStyle: {
    borderColor: "$borderColorHover"
  },
  focusStyle: {
    outlineColor: "$borderColorFocus",
    outlineWidth: 2,
    outlineStyle: "solid",
    borderColor: "$borderColorFocus"
  }
};
const InputFramePreTyped = (0, import_core.styled)(
  import_react_native.TextInput,
  {
    name: "Input",
    variants: {
      unstyled: {
        false: defaultStyles
      },
      size: {
        "...size": import_inputHelpers.inputSizeVariant
      }
    },
    defaultVariants: {
      unstyled: false
    }
  },
  {
    isInput: true
  }
);
const InputFrame = InputFramePreTyped;
const Input = (0, import_focusable.focusableInputHOC)(InputFrame);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Input,
  InputFrame,
  defaultStyles
});
//# sourceMappingURL=Input.js.map
