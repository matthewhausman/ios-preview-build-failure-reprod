"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var createAnimatedComponent_exports = {};
__export(createAnimatedComponent_exports, {
  default: () => createAnimatedComponent
});
module.exports = __toCommonJS(createAnimatedComponent_exports);
var React = __toESM(require("react"));
var import_react_native_web_internals = require("react-native-web-internals");
var import_useAnimatedProps = __toESM(require("./useAnimatedProps"));
function createAnimatedComponent(Component) {
  return /* @__PURE__ */ React.forwardRef((props, forwardedRef) => {
    var _useAnimatedProps = (0, import_useAnimatedProps.default)(props), reducedProps = _useAnimatedProps[0], callbackRef = _useAnimatedProps[1];
    var ref = (0, import_react_native_web_internals.useMergeRefs)(callbackRef, forwardedRef);
    var passthroughAnimatedPropExplicitValues = reducedProps.passthroughAnimatedPropExplicitValues, style = reducedProps.style;
    var _ref = passthroughAnimatedPropExplicitValues !== null && passthroughAnimatedPropExplicitValues !== void 0 ? passthroughAnimatedPropExplicitValues : {};
    const { passthroughStyle, ...passthroughProps } = _ref;
    var mergedStyle = [style, passthroughStyle];
    return /* @__PURE__ */ React.createElement(Component, {
      ...reducedProps,
      ...passthroughProps,
      style: mergedStyle,
      ref
    });
  });
}
//# sourceMappingURL=createAnimatedComponent.js.map
